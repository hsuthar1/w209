) / dtA[S==1 & !is.na(Post) & Treat=="N", .N, ]
print("potential outcome to control is:")
(po.control)
# potential outcome to treament is calculated as the proportion of homes that have bins when assigned to treatment
po.treatment <- (
dtA[S==1 & !is.na(Post) & Treat=="Y" & Post=="Y", .N, ] -
dtA[S==1 & !is.na(Post) & Treat=="Y" & Pre=="Y", .N, ]
) / dtA[S==1 & !is.na(Post) & Treat=="Y", .N, ]
print("potential outcome to treatment is:")
(po.treatment)
# point estimate for ate is calculate as potential outcome to treatment - potential outcome to control
# note, we can only calcuate the intent to treamt effect, because we have no data on application rate
ate <- po.treatment - po.control
print("point estimate for ITT effect is:")
(ate)
# calculates the ITT effect, using regression
#m1 <- dtA[ , lm(hasBin ~ D) , ]  #this format that Alex likes doesn't quite work with the clustered se code later, so using a simpler one
# model 1, has no control variables
m1 <- lm(post.bin ~ D, data=dtA[S==1])
(m1)
# plot(m1)
# model 1a, assumes the NA houses would have NOT put out a bin, had we been able to measure them
m1a <- lm(post.bin.a ~ D, data=dtA[S==1])
(m1a)
# plot(m1a)
# model 1b, assumes the NA houses woudl have put out a bin, had we been able to measure them
m1b <- lm(post.bin.b ~ D, data=dtA[S==1])
(m1b)
# plot(m1b)
# model 2 includes covariates like pickup DOW, street, and neighor scores, as control variables
# m2 <- lm(post.bin ~ D + street.score + neighbors.score + wed + street.score * D + neighbors.score * D + wed * D, data=dtA[S==1])
m2 <- lm(post.bin ~ D + neighbors.score + wed, data=dtA[S==1])
(m2)
# plot(m2)
# model 2a, assumes the NA houses would have NOT put out a bin, had we been able to measure them
# m2a <- lm(post.bin.a ~ D + street.score + neighbors.score + wed + street.score * D + neighbors.score * D + wed * D, data=dtA[S==1])
m2a <- lm(post.bin.a ~ D + neighbors.score + wed, data=dtA[S==1])
(m2a)
# plot(m2a)
# model 2b, assumes the NA houses would have put out a bin, had we been able to measure them
# m2b <- lm(post.bin.b ~ D + street.score + neighbors.score + wed + street.score * D + neighbors.score * D + wed * D, data=dtA[S==1])
m2b <- lm(post.bin.b ~ D + neighbors.score + wed, data=dtA[S==1])
(m2b)
# plot(m2b)
# calculates the clustered standard error
# is better fit to reality in our case, since we have a clustered design
# TBD think about randomization inference, see Ram's code and GG's
#install.packages("multiwayvcov")
library(multiwayvcov)
# note, we assume streets is our cluster, so we calculate the clustered var-cov matrix using Street variable
m1$cluster.vcov <- cluster.vcov(m1, ~ Street)
coeftest(m1, m1$cluster.vcov)
library(multiwayvcov)
# calculates the clustered standard error
# is better fit to reality in our case, since we have a clustered design
# TBD think about randomization inference, see Ram's code and GG's
#install.packages("multiwayvcov")
library(multiwayvcov)
# note, we assume streets is our cluster, so we calculate the clustered var-cov matrix using Street variable
m1$cluster.vcov <- cluster.vcov(m1, ~ Street)
coeftest(m1, m1$cluster.vcov)
# calculates the clustered standard error
# is better fit to reality in our case, since we have a clustered design
# TBD think about randomization inference, see Ram's code and GG's
#install.packages("multiwayvcov")
library(multiwayvcov)
library(lmtest)
# note, we assume streets is our cluster, so we calculate the clustered var-cov matrix using Street variable
m1$cluster.vcov <- cluster.vcov(m1, ~ Street)
coeftest(m1, m1$cluster.vcov)
m1a$cluster.vcov <- cluster.vcov(m1a, ~ Street)
coeftest(m1a, m1a$cluster.vcov)
m1b$cluster.vcov <- cluster.vcov(m1b, ~ Street)
coeftest(m1b, m1b$cluster.vcov)
m2$cluster.vcov <- cluster.vcov(m2, ~ Street)
coeftest(m2, m2$cluster.vcov)
m2a$cluster.vcov <- cluster.vcov(m2a, ~ Street)
coeftest(m2a, m2a$cluster.vcov)
m2b$cluster.vcov <- cluster.vcov(m2b, ~ Street)
coeftest(m2b, m2b$cluster.vcov)
# displays the clustered standard error we just calculated using a stargazer table
#install.packages("stargazer")
library(stargazer)
stargazer(
m1
,m1a
,m1b
,m2
,m2a
,m2b
,se=list(
sqrt(diag(m1$cluster.vcov))
,sqrt(diag(m1a$cluster.vcov))
,sqrt(diag(m1b$cluster.vcov))
,sqrt(diag(m2$cluster.vcov))
,sqrt(diag(m2a$cluster.vcov))
,sqrt(diag(m2b$cluster.vcov))
)
,header=F
, type="text"
# ,type="latex"
)
anova(m1, m2, test="LRT")
# calculates the ci for the ITT effect
coefci(m1)
coefci(m1a)
coefci(m1b)
coefci(m2)
coefci(m2a)
coefci(m2b)
summary( aov(m1) )
summary( aov(m2) )
# displays the clustered standard error we just calculated using a stargazer table
#install.packages("stargazer")
library(stargazer)
stargazer(
m1
# ,m1a
# ,m1b
,m2
# ,m2a
# ,m2b
,se=list(
sqrt(diag(m1$cluster.vcov))
,sqrt(diag(m1a$cluster.vcov))
,sqrt(diag(m1b$cluster.vcov))
,sqrt(diag(m2$cluster.vcov))
,sqrt(diag(m2a$cluster.vcov))
,sqrt(diag(m2b$cluster.vcov))
)
,header=F
, type="text"
# ,type="latex"
)
# displays the clustered standard error we just calculated using a stargazer table
#install.packages("stargazer")
library(stargazer)
stargazer(
m1
# ,m1a
# ,m1b
,m2
# ,m2a
# ,m2b
,se=list(
sqrt(diag(m1$cluster.vcov))
# ,sqrt(diag(m1a$cluster.vcov))
# ,sqrt(diag(m1b$cluster.vcov))
,sqrt(diag(m2$cluster.vcov))
# ,sqrt(diag(m2a$cluster.vcov))
# ,sqrt(diag(m2b$cluster.vcov))
)
,header=F
, type="text"
# ,type="latex"
)
# displays the clustered standard error we just calculated using a stargazer table
#install.packages("stargazer")
library(stargazer)
stargazer(
m1
,m1a
,m1b
,m2
,m2a
,m2b
,se=list(
sqrt(diag(m1$cluster.vcov))
,sqrt(diag(m1a$cluster.vcov))
,sqrt(diag(m1b$cluster.vcov))
,sqrt(diag(m2$cluster.vcov))
,sqrt(diag(m2a$cluster.vcov))
,sqrt(diag(m2b$cluster.vcov))
)
,header=F
, type="text"
# ,type="latex"
)
# # calculates the robust standard error
# # see week05clusterAndRobust.Rmd for details
#
# # we calculate robust standard errors using the `sandwich` package, and via the `vcovHC` function call, which is the **H**eteroskedastic **C**onsistent **V**ariance **Co****V**ariance estimator.
#
# #install.packages("sandwich")
library(sandwich)
#install.packages("lmtest")
library(lmtest)
m1$vcovHC <- vcovHC(m1)
coeftest(m1)
m1a$vcovHC <- vcovHC(m1a)
coeftest(m1a)
m1b$vcovHC <- vcovHC(m1b)
coeftest(m1b)
m2a$vcovHC <- vcovHC(m2a)
coeftest(m2a)
m2b$vcovHC <- vcovHC(m2b)
coeftest(m2b)
m2b$vcovHC <- vcovHC(m2b)
coeftest(m2b)
# # displays the robust standard error we just calculated using a stargazer table
#
#install.packages("stargazer")
library(stargazer)
stargazer(
m1
,m1a
,m1b
,m2
,m2a
,m2b
,se=list(
sqrt(diag(m1$vcovHC))
,sqrt(diag(m1a$vcovHC))
,sqrt(diag(m1b$vcovHC))
,sqrt(diag(m2$vcovHC))
,sqrt(diag(m2a$vcovHC))
,sqrt(diag(m2b$vcovHC))
)
,header=F
, type="text"  # type="latex"?
)
setwd("C:/Users/yangyq/workspaces/ucbiyyq/w209/w209-a02")
getwd()
library(data.table)
dt <- data.table( read.csv(Dating.csv, na.string=c("NA")) )
dt <- data.table( read.csv("Dating.csv", na.string=c("NA")) )
dt <- data.table( read.csv("Dating.csv", na.string=c("NA")) )
View(dt)
dt <- data.table( read.csv("Dating.csv", na.string=c("NA","")) )
View(dt)
dt <- data.table( read.csv("Dating.csv", na.string=c("NA"," ")) )
View(dt)
colnames(dt)
sort(colnames(dt))
View(dt)
str(dt)
dt[,hist(state)]
dt[,hist(region)]
dt[,.N,by=region][,hist(.N)]
dt[,.N,by=region][,barplot(.N)]
dt[,.N,by=region]
dt[,.N,by=region][,barplot(N)]
dt[,.N,by=region][,barplot(N,xlab=region)]
dt[,barplot(table(region))]
dt[,barplot(table(region))]
dt[,barplot(table(usr))]
dt[,barplot(table(sex))]
dt[,hist(life_quality)]
dt[,barplot(table(life_quality))]
dt[,barplot(table(sex))]
dt[,barplot(table(life_quality))]
dt[life_quality="",.SD]
dt[life_quality=="",.SD]
dt[life_quality=="Refused",.SD]
dt[life_quality=="Refused",life_quality]
dt[life_quality=="Don't know",life_quality]
dt[,barplot(table(use_internet))]
dt[,barplot(table(use_email))]
dt[,barplot(table(use_social_networking))]
dt[,barplot(table(use_twitter))]
dt[,barplot(table(use_reddit))]
dt[,barplot(table(use_twitter))]
dt[,barplot(table(use_social_networking))]
dt[,barplot(table(googled_own_name))]
dt[,barplot(table(have_cell_phone))]
dt[,barplot(table(have_smart_phone))]
dt[,barplot(table(have_tablet))]
dt[,barplot(table(have_smart_phone))]
dt[,barplot(table(have_cell_phone))]
dt[,barplot(table(martial_status))]
dt[,barplot(table(marital_status))]
dt[,barplot(table(in_relationship))]
dt[,barplot(table(years_in_relationship))]
dt[,hist(years_in_relationship)]
dt[,years_in_relationship:=numeric(years_in_relationship)]
dt[,years_in_relationship:=as.numeric(as.character(years_in_relationship))]
dt[,hist(years_in_relationship)]
str(dt$years_in_relationship)
summary(dt$years_in_relationship)
dt[,hist(years_in_relationship)]
summary(dt$years_in_relationship)
dt[,barplot(table(looking_for_partner))]
dt[,barplot(table(met_partner_online))]
dt[,barplot(table(looking_for_partner))]
dt[,barplot(table(searched_for_ex_online))]
dt[,barplot(table(flirted_online))]
dt[,barplot(table(used_dating_site))]
dt[,hist(age)]
summary(dt$age)
dt[,barplot(table(have_children))]
dt[,hist(children0_5)]
summary(dt$children0_5)
dt[,hist(children6_11)]
summary(dt$children6_11)
dt[,hist(children12_17)]
summary(dt$children12_17)
dt[,hist(adults_in_household)]
dt[,adults_in_household:=as.numeric(as.character(adults_in_household))]
dt[,hist(adults_in_household)]
summary(dt$adults_in_household)
dt[,hist(educ2)]
dt[,educ2:=as.numeric(as.character(educ2))]
dt[,hist(educ2)]
dt[,hist(emplnw)]
summary(educ2)
summary(dt$educ2)
summary(dt$emplnw)
dt[,barplot(table(race))]
dt[,barplot(table(income))]
dt[,income:=as.numeric(as.character(income))]
dt[,hist(income)]
View(dt)
dt[,hist(income,breaks=rep(1,100,1))]
dt[,hist(income,breaks=rep(1,1,100))]
dt[,hist(income,breaks=100)]
summary(dt$income)
dt[,hist(emplnw)]# ???
dt[,hist(educ2)] # ???
dt[,hist(adults_in_household)]
dt[,hist(children12_17)]
dt[,hist(children12_17,breaks=100)]
dt[,hist(children6_11)]
dt[,hist(children6_11,breaks=100)]
dt[,hist(children0_5)]
dt[,hist(children0_5,breaks=100)]
dt[,barplot(table(have_children))]
dt[,hist(age)] # some miscodings at 99
dt[,barplot(table(lgbt))]
dt[,hist(weight)]
dt[,hist(standwt)]
dt[,hist(weight)]
dt[,hist(income,breaks=100)]
dt[income<98,hist(income,breaks=10)]
dt[income<98,hist(income)]
dt[income<98,hist(income,breaks=10)]
dt[income<98,hist(income,breaks=9)]
dt <- data.table( read.csv("Dating.csv", na.string=c("NA"," ")) )
dt[,years_in_relationship:=as.numeric(as.character(years_in_relationship))]
dt[,adults_in_household:=as.numeric(as.character(adults_in_household))]
dt[,barplot(table(educ2))]
dt[,barplot(table(income))]
dt[,barplot(table(emplnw))]
str(dt$emplnw)
str(dt)
dt[,state:=as.factor(state)]
str(dt)
dt[,emplnw:=as.factor(emplnw)]
dt[,hist(state)]
dt[,barplot(table(state))]
View(dt)
dt[,barplot(table(state))]
dt[,hist(years_in_relationship)]
dt[,hist(years_in_relationship,breaks=100)]
summary(dt$years_in_relationship)
dt[,barplot(table(emplnw))]
dt <- data.table( read.csv("Dating.csv", na.string=c("NA"," ")) )
dt[,state:=as.factor(state)]
dt[,emplnw:=as.factor(emplnw)]
str(dt)
dt[,income:=as.factor(income)]
str(dt)
dt[,barplot(table(income))]
dt[,barplot(table(emplnw))]
str(dt)
View(dt)
dt[,years_in_relationship:=as.numeric(as.character(years_in_relationship))]
dt[,adults_in_household:=as.numeric(as.character(adults_in_household))]
dt[,hist(children0_5,breaks=100)]
str(dt)
dt[,years_in_relationship:=as.integer(as.character(years_in_relationship))]
dt[,adults_in_household:=as.integer(as.character(adults_in_household))]
str(dt)
dt[,barplot(table(marital_status))]
dt[,plot(income,marital_status)]
dt[,plot(income ~ marital_status)]
dt[,plot(as.integer(as.character(income)) ~ marital_status)]
dt[income<98,plot(as.integer(as.character(income)) ~ marital_status)]
dt[,barplot(table(income))]
dt[income<98,plot(as.integer(as.character(income)) ~ marital_status)]
dt[income<98,][,plot(as.integer(as.character(income)) ~ marital_status)]
dt[income<98,.(income,marital_status)]
dt[income %in% 98,.(income,marital_status)]
dt[income %not in% 98,.(income,marital_status)]
dt[income %in% (98, 99),.(income,marital_status)]
dt[income %in% c(98, 99),.(income,marital_status)]
dt[!(income %in% c(98, 99)),.(income,marital_status)]
dt[!(income %in% c(98, 99)),.(income,marital_status)][,plot(as.integer(as.character(income)) ~ marital_status)]
dt[,barplot(table(used_dating_site))]
dt[
!(income %in% c(98, 99) & marital_status != "Refused"
,.(income,marital_status,used_dating_site)
]
dt[
!(income %in% c(98, 99)) & marital_status != "Refused"
,.(income,marital_status,used_dating_site)
]
dt[,barplot(table(used_dating_site))]
summary(used_dating_site)
summary(dt$used_dating_site)
dt[
!(income %in% c(98, 99)) & marital_status != "Refused" & !is.na(used_dating_site)
,.(income,marital_status,used_dating_site)
]
dt[
!(income %in% c(98, 99)) & marital_status != "Refused" & !is.na(used_dating_site)
,.(income,marital_status,used_dating_site)
][
,plot(as.integer(as.character(income)) ~ marital_status)
]
dt[
!(income %in% c(98, 99)) & marital_status != "Refused" & !is.na(used_dating_site)
,.(income,marital_status,used_dating_site)
][
,plot(used_dating_site ~ income + marital_status)
]
dt[
!(income %in% c(98, 99)) & marital_status != "Refused" & !is.na(used_dating_site)
,.(income,marital_status,used_dating_site)
][
,plot(used_dating_site ~ as.integer(as.character(income)) + marital_status)
]
dt[
!(income %in% c(98, 99)) & marital_status != "Refused" & !is.na(used_dating_site)
,.(income,marital_status,used_dating_site)
][
,plot(as.integer(used_dating_site) ~ as.integer(as.character(income)) + as.integer(marital_status))
]
temp <- dt[
!(income %in% c(98, 99)) & marital_status != "Refused" & !is.na(used_dating_site)
,.(income,marital_status,used_dating_site)
][
,lm(as.integer(used_dating_site) ~ as.integer(as.character(income)) + as.integer(marital_status))
]
temp
as.integer(dt$used_dating_site)
dt$used_dating_site
temp
temp2 <- dt[
,.(income,marital_status,used_dating_site)
][
,lm(as.integer(used_dating_site) ~ as.integer(as.character(income)) + as.integer(marital_status))
]
temp2
summary(temp2)
temp3 <- dt[
,.(income,marital_status,used_dating_site)
][
,lm(used_dating_site ~ income + marital_status)
]
temp3 <- dt[
,.(income,marital_status,used_dating_site)
][
,lm(as.integer(used_dating_site) ~ income + marital_status)
]
summary(temp3)
dt$used_dating_site
as.integer(dt$used_dating_site)
summary(temp3)
summary(dt$used_dating_site)
levels(dt$used_dating_site)
dt$used_dating_site
summary(dt$used_dating_site)
levels(dt$used_dating_site)
dt[,factor(used_dating_site,levels(x)[c(4,2,1,3)])]
dt[,factor(used_dating_site,levels(used_dating_site)[c(4,2,1,3)])]
dt[,used_dating_site:=factor(used_dating_site,levels(used_dating_site)[c(4,2,1,3)])]
levels(dt$used_dating_site)
summary(dt$used_dating_site)
dt[,barplot(table(income))]
levels(dt$income)
temp3 <- dt[
,.(income,marital_status,used_dating_site)
][
,lm(as.integer(used_dating_site) ~ income + marital_status)
]
summary(temp3)
temp3 <- dt[
,.(income,marital_status,used_dating_site)
][
,lm(as.integer(used_dating_site) ~ income + marital_status + use_internet + in_relationship + looking_for_partner)
]
summary(temp3)
temp3 <- dt[
,lm(as.integer(used_dating_site) ~ income + marital_status + use_internet + in_relationship + looking_for_partner)
]
summary(temp3)
dt <- data.table( read.csv("Dating.csv", na.string=c("NA"," ")) )
dt[,state:=as.factor(state)]
dt[,emplnw:=as.factor(emplnw)]
dt[,income:=as.factor(income)]
dt[,years_in_relationship:=as.integer(as.character(years_in_relationship))]
dt[,adults_in_household:=as.integer(as.character(adults_in_household))]
dt[,used_dating_site:=factor(used_dating_site,levels(used_dating_site)[c(4,2,1,3)])]
levels(dt$used_dating_site)
temp3 <- dt[
,lm(as.integer(used_dating_site) ~ income + marital_status + use_internet + in_relationship + looking_for_partner)
]
summary(temp3)
dt[,hist(weight)]
dt[,barplot(table(life_quality))]
getwd()
library(data.table)
dt <- data.table(  read.csv("C:/Temp/w209/vast-2017-1/Lekagul Sensor Data.csv") )
colnames(dt)
dt[,plot(car.type)]
dt[gate.name=="entrance1",plot(car.type)]
dt[gate.name=="entrance1",plot(car.type)]
dt[gate.name=="entrance1",hist(car.type)]
dt[gate.name=="entrance1",hist(table(car.type))]
dt[gate.name=="entrance1",plot(car.type)]
View(dt)
dt[gate.name=="entrance1",.SD][,plot(car.type)]
